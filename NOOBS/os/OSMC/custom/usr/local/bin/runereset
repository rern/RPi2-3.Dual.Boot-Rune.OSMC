#!/bin/bash

mmc() {
	if [[ ! $( mount | grep p$1 ) ]]; then
		mkdir -p /tmp/p$1
		mount /dev/mmcblk0p$1 /tmp/p$1
	fi
}
li=$( printf "\e[36m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' "=" )
info='\e[30m\e[43m ! \e[0m'
bar='\e[36m\e[46m . \e[0m'
yesno() { # $1 = header string; $2 = input or <enter> = ''
	echo -e "$info $1"
	echo -e '  \e[0;36m0\e[m No'
	echo -e '  \e[0;36m1\e[m Yes'
	echo -e '\n\e[0;36m0\e[m / 1 ? '
	read -n 1 $2
	echo
}

yesno "Reset Rune:" ans
[[ $ans != 1 ]] && exit

[[ -z $1 ]] && yesno "Reboot to Rune after reset:" ansre

time0=$( date +%s )

echo $li
echo -e "$bar Rune reset"
echo $li
umount -l /dev/mmcblk0p9 &> /dev/null
echo -e "$bar Format partition ..."
echo y | mkfs.ext4 /dev/mmcblk0p9 &> /dev/null
mmc 1
mmc 9

if ! type bsdtar &>/dev/null; then
  echo -e "$bar Install bsdtar ..."
  apt update
  apt install -y bsdtar
fi
echo -e "$bar Extract files ..."
pathrune=/tmp/p9
bsdtar -xvf /tmp/p1/os/RuneAudio/root.tar.xz -C $pathrune \
  --exclude=./srv/http/.git \
  --exclude=./usr/include \
  --exclude=./usr/lib/{python2.7/test,python3*,libgo.*} \
  --exclude=./usr/share/{doc,gtk-doc,info,man}

# from partition_setup.sh
echo -e "$bar Partition setup ..."
sed -i -e 's|^.* /boot |/dev/mmcblk0p8  /boot |
' -e '/^#/ d
' -e 's/\s\+0\s\+0\s*$//
' $pathrune/etc/fstab

cp -r /tmp/p1/os/RuneAudio/custom/. $pathrune
chmod 755 $pathrune/usr/local/bin/*

umount -l /tmp/p1
umount -l /tmp/p9

time1=$( date +%s )
timediff=$(( $time1 - $time0 ))
timemin=$(( $timediff / 60 ))
timesec=$(( $timediff % 60 ))
echo -e "\nDuration: $timemin min $timesec sec"
echo $li
echo -e "$bar Rune reset successfully."
echo $li

[[ $ansre == 1 ]] && reboot 8
