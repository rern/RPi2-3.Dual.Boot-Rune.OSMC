#!/bin/bash

### reset rune root partition to virgin state

# format partition
# extract root partition
# fstab for boot partition
# copy custom files

li=$( printf "\e[36m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' "=" )
bar='\e[36m\e[46m . \e[0m'

mmc() {
	[[ $2 ]] && mntdir=/tmp/$2 || mntdir=/tmp/p$1
	if [[ ! $( mount | grep $mntdir ) ]]; then
		mkdir -p $mntdir
		mount /dev/mmcblk0p$1 $mntdir
	fi
}
yesno() { # $1 = header string; $2 = input or <enter> = ''
	echo
	echo -e "\e[30m\e[43m ? \e[0m $1"
	echo -e '  \e[36m0\e[m No'
	echo -e '  \e[36m1\e[m Yes'
	echo
	echo -e '\e[36m0\e[m / 1 ? '
	read -n 1 answer
	echo
	[[ $2 ]] && eval $2=$answer
}

yesno "Reset Rune:"
[[ $answer != 1 ]] && exit

yesno "Reboot to Rune after reset:" ansre

time0=$( date +%s )

echo $li
echo -e "$bar Rune reset"
echo $li
umount -l /dev/mmcblk0p9 &> /dev/null
echo -e "$bar Format partition ..."
echo y | mkfs.ext4 /dev/mmcblk0p9 &> /dev/null

if ! type bsdtar &>/dev/null; then
  echo -e "$bar Install bsdtar ..."
  apt update
  apt install -y bsdtar
fi
echo -e "$bar Extract files ..."
mmc 1
mmc 9
mntroot=/tmp/p9
bsdtar -xvf /tmp/p1/os/RuneAudio/root.tar.xz -C $mntroot \
  --exclude=./srv/http/.* \
  --exclude=./usr/include \
  --exclude=./usr/lib/{python2.7/test,python3*,libgo.*} \
  --exclude=./usr/share/{doc,gtk-doc,info,man}

# from partition_setup.sh
echo -e "$bar Partition setup ..."
sed -i -e 's|^.* /boot |/dev/mmcblk0p8  /boot |
' -e '/^#/ d
' -e 's/\s\+0\s\+0\s*$//
' $mntroot/etc/fstab

# addons menu
sed -i '/poweroff-modal/ i\
            <li style="cursor: pointer;"><a id="addons"><i class="fa fa-cubes"></i> Addons</a></li>
' $mntroot/srv/http/app/templates/header.php

sed -i '$ a\
<script src="<?=$this->asset('"'"'/js/addonsinfo.js'"'"')?>"></script>\
<script src="<?=$this->asset('"'"'/js/addonsmenu.js'"'"')?>"></script>
' $mntroot/srv/http/app/templates/footer.php

echo 'http ALL=NOPASSWD: ALL' > $mntroot/etc/sudoers.d/http

cp -r /tmp/p1/os/RuneAudio/custom/. $mntroot
chmod 755 $mntroot/usr/local/bin/*reset $mntroot/srv/http/addons*
chown 33:33 $mntroot/srv/http/addons* $mntroot/srv/http/assets/js/addons*

time1=$( date +%s )
timediff=$(( $time1 - $time0 ))
timemin=$(( $timediff / 60 ))
timesec=$(( $timediff % 60 ))
echo -e "\nDuration: $timemin min $timesec sec"
echo $li
echo -e "$bar Rune reset successfully."
echo $li
success=1

[[ $ansre == 1 && $# == 0 ]] && reboot 8
