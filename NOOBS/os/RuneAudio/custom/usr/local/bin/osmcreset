#!/bin/bash

mmc() {
if [[ ! $( mount | grep p$1 ) ]]; then
  mkdir -p /tmp/p$1
  mount /dev/mmcblk0p$1 /tmp/p$1
fi
}
li=$( printf "\e[36m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' "=" )
info='\e[30m\e[43m ! \e[0m'
bar='\e[36m\e[46m . \e[0m'
yesno() { # $1 = header string; $2 = input or <enter> = ''
	echo -e "$info $1"
	echo -e '  \e[0;36m0\e[m No'
	echo -e '  \e[0;36m1\e[m Yes'
	echo -e '\n\e[0;36m0\e[m / 1 ? '
	read -n 1 $2
	echo
}

yesno "Reset OSMC:" ans
[[ $ans != 1 ]] && return

[[ -z $1 ]] && yesno "Reboot to OSMC after reset:" ansre

time0=$( date +%s )

echo $li
echo -e "$bar OSMC reset"
echo $li
umount -l /dev/mmcblk0p7 &> /dev/null
# format with label to match cmdline.txt
echo -e "$bar Format partition ..."
mmc 1
mmc 6
mmc 7
label=$( cat /tmp/p6/cmdline.txt | awk '{print $1}' | sed 's/root=LABEL=//' )
echo y | mkfs.ext4 -L $label /dev/mmcblk0p7 &> /dev/null
# extract image files
echo -e "$bar Extract files ..."
pathosmc=/tmp/p7
bsdtar -xvf /tmp/p1/os/OSMC/root-rbp2.tar.xz -C $pathosmc \
  --exclude=./var/cache/apt \
  --exclude=./usr/include \
  --exclude=./usr/lib/{python2.7/test,python3*,libgo.*} \
  --exclude=./usr/share/{doc,gtk-doc,info,man}

# from partition_setup.sh
echo -e "$bar Partition setup ..."
vfat_part=$( blkid /dev/mmcblk0p6 | awk '{ print $2 }' )
vfat_part=${vfat_part//\"/}

echo "
#device         mount      type  options
$vfat_part      /boot      vfat  defaults,noatime
/dev/mmcblk0p1  /media/p1  vfat  noauto,noatime
/dev/mmcblk0p5  /media/p5  ext4  noauto,noatime
/dev/mmcblk0p8  /media/p8  vfat  noauto,noatime
/dev/mmcblk0p9  /media/p9  ext4  noauto,noatime
" > $pathosmc/etc/fstab

sed -i 1s/root:.*/root:\$6\$X6cgc9tb\$wTTiWttk\/tRwPrM8pLZCZpYpHE8zEar2mkSSQ7brQvflqhA5K1dgcyU8nzX\/.tAImkMbRMR0ex51LjPsIk8gm0:17000:0:99999:7:::/
' $pathosmc/etc/shadow
sed -i -e 's/PermitRootLogin .*/PermitRootLogin yes/
' -e '/^KexAlgorithms/ s/^/#/
' -e '/^Ciphers/ s/^/#/
' -e '/^MACs/ s/^/#/
' $pathosmc/etc/ssh/sshd_config
cp -r /tmp/p1/os/OSMC/custom/. $pathosmc
chmod 644 $pathosmc/etc/udev/rules.d/usbsound.rules
chmod 755 $pathosmc/home/osmc/*.py
chmod 755 $pathosmc/usr/local/bin/*
chown -R 1000:1000 $pathosmc/home/osmc

umount -l /tmp/p1
umount -l /tmp/p6
umount -l /tmp/p7

time1=$( date +%s )
timediff=$(( $time1 - $time0 ))
timemin=$(( $timediff / 60 ))
timesec=$(( $timediff % 60 ))
echo -e "\nDuration: $timemin min $timesec sec"
echo $li
echo -e "$bar OSMC reset successfully."
echo $li

[[ $ansre == 1 ]] && reboot 6
