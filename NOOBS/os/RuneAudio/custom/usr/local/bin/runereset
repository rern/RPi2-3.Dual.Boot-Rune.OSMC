#!/bin/bash

### reset rune root partition to virgin state

# format partition
# extract root partition
# fstab for boot partition
# copy custom files

yesno() { # $1 = header string; $2 = input or <enter> = ''
	echo
	echo -e "\e[30m\e[43m ? \e[0m $1"
	echo -e '  \e[36m0\e[m No'
	echo -e '  \e[36m1\e[m Yes'
	echo
	echo -e '\e[36m0\e[m / 1 ? '
	read -n 1 answer
	echo
	[[ $2 ]] && eval $2=$answer
}
mmc() {
	[[ $2 ]] && mntdir=/tmp/$2 || mntdir=/tmp/p$1
	if [[ ! $( mount | grep $mntdir ) ]]; then
		mkdir -p $mntdir
		mount /dev/mmcblk0p$1 $mntdir
	fi
}

mmc 5
# omit current os from list
partroot=$( mount | grep 'on / ' | cut -d' ' -f1 )
partroot=${partroot/\/dev\/}
partline=$( sed -n "/$partroot/=" /tmp/p5/installed_os.json )
partline0=$(( partline - 3 ))
sed "$(( partline - 3 )), $partline d" /tmp/p5/installed_os.json > /tmp/installed_os.json
# filter names and boot partitions
part=$( sed -n '/name/,/mmcblk/ p' /tmp/installed_os.json | sed '/part/ d; s/\s//g; s/"//g; s/,//; s/name://' )
partarray=( $( echo $part ) )

ilength=${#partarray[*]}
declare -A os

echo -e "\n\e[30m\e[43m ? \e[0m Reset OS:"
echo -e '  \e[36m0\e[m Cancel'
for (( i=0; i < ilength; i++ )); do
	if (( $(( i % 2 )) == 0 )); then
		echo -e "  \e[36m$(( i / 2 + 1 ))\e[m ${partarray[ i ]}"
	else
		os[$(( i + 6 ))]=${partarray[i - 1]}
	fi
done
echo
echo 'Which ? '
read -n 1 ans
echo
[[ -z $ans || $ans == 0 ]] && exit
partnum=$(( ans * 2 + 5 ))
partboot=$(( partnum - 1 ))
partreset=/dev/mmcblk0p$partnum
osname=$( echo -e "\e[36m${os[$partnum]}\e[m" )
li=$( printf "\e[36m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" '' | tr ' ' "=" )
bar='\e[36m\e[46m . \e[0m'

yesno "Reset $osname:"
[[ $answer != 1 ]] && exit

yesno "Reboot to $osname after reset:" ansre

time0=$( date +%s )

echo $li
echo -e "$bar $osname reset ..."
echo $li
umount -l $partreset &> /dev/null
echo -e "$bar Format partition ..."
echo y | mkfs.ext4 $partreset &> /dev/null

echo -e "$bar Extract files ..."
mmc 1
mmc $partnum
mntroot=/tmp/p$partnum
bsdtar -xvf /tmp/p1/os/${os[$partnum]}/root.tar.xz -C $mntroot \
  --exclude=./srv/http/.* \
  --exclude=./usr/include \
  --exclude=./usr/lib/{python2.7/test,python3*,libgo.*} \
  --exclude=./usr/share/{doc,gtk-doc,info,man}

# from partition_setup.sh
echo -e "$bar Partition setup ..."
sed -i -e "s|^.* /boot |/dev/mmcblk0p$partboot  /boot |
" -e '/^#/ d
' -e 's/\s\+0\s\+0\s*$//
' $mntroot/etc/fstab

# addons menu
sed -i -e '/runeui.css/ a\
    <link rel="stylesheet" href="<?=$this->asset('"'"'/css/addonsinfo.css'"'"')?>">
' -e '/poweroff-modal/ i\
            <li style="cursor: pointer;"><a id="addons"><i class="fa fa-cubes"></i> Addons</a></li>
' $mntroot/srv/http/app/templates/header.php

sed -i '$ a\
<script src="<?=$this->asset('"'"'/js/addonsinfo.js'"'"')?>"></script>\
<script src="<?=$this->asset('"'"'/js/addonsmenu.js'"'"')?>"></script>
' $mntroot/srv/http/app/templates/footer.php

echo 'http ALL=NOPASSWD: ALL' > $mntroot/etc/sudoers.d/http
chmod 4755 $mntroot/usr/bin/sudo

cp -r /tmp/p1/os/RuneAudio/custom/. $mntroot
chmod 755 $mntroot/usr/local/bin/*reset $mntroot/srv/http/addons*
chown 33:33 $mntroot/srv/http/addons* $mntroot/srv/http/assets/js/addons*

time1=$( date +%s )
timediff=$(( $time1 - $time0 ))
timemin=$(( $timediff / 60 ))
timesec=$(( $timediff % 60 ))
echo -e "\nDuration: $timemin min $timesec sec"
echo $li
echo -e "$bar $osname reset successfully."
echo $li
success=1

if [[ $ansre == 1 && $# == 0 ]]; then
	echo $partboot > /sys/module/bcm2709/parameters/reboot_part
	/var/www/command/rune_shutdown 2> /dev/null; reboot
fi
